[{"path":"https://jestonblu.github.io/RobinHood/articles/getting_started.html","id":"establish-a-connection-to-robinhood","dir":"Articles","previous_headings":"","what":"Establish a connection to RobinHood","title":"Getting Started","text":"","code":"library(RobinHood)  # Establishes a connection with your account and generates an oauth2 token # Returns a list style object of relevant API keys and IDs needed to interact with your account RH = RobinHood(username = \"user@email.com\", password = \"password\")  # If you have MFA enabled RH = RobinHood(username = \"user@email.com\", password = \"password\", mfa_code = \"provided-by-auth-app\")"},{"path":"https://jestonblu.github.io/RobinHood/articles/getting_started.html","id":"user-and-account-info","dir":"Articles","previous_headings":"","what":"User and Account Info","title":"Getting Started","text":"","code":"# Get basic user info get_user(RH)  # $ url           : chr # $ id            : chr # $ id_info       : chr # $ username      : chr # $ email         : chr # $ email_verified: logi # $ first_name    : chr # $ last_name     : chr # $ origin        :List of 1  # ..$ locality: chr # $ profile_name  : chr # $ created_at    : POSIXct[1:1]  # Get account info (see api_accounts for a list of fields) get_accounts(RH)  # Get summary of your current portfolio get_portfolios(RH)  # Get historical summaries of your portfolio get_portfolios(RH, interval = \"day\", span = \"3month\")  # Structure # $ begins_at            : POSIXct, format: \"2019-01-04\" \"2019-01-07\" \"2019-01-08\" \"2019-01-09\" ... # $ adjusted_open_equity : num  500 504 504 504 504 ... # $ adjusted_close_equity: num  500 504 504 504 509 ... # $ open_equity          : num  0 504 504 504 504 ... # $ close_equity         : num  0 504 504 504 509 ... # $ open_market_value    : num  0 4.01 4.12 4.16 4.26 ... # $ close_market_value   : num  0 4.07 4.14 4.27 17.52 ... # $ net_return           : num  0 0.0001 0 0.0002 0.0094 0.0002 0 -0.0003 0.0005 0.0015 ... # $ session              : chr  \"reg\" \"reg\" \"reg\" \"reg\" ...  # Interact with your linked bank accounts get_ach(RH, action = \"transfers\")          # Returns historical bank transfers get_ach(RH, action = \"relationships\")      # Info on your linked bank accounts get_ach(RH, action = \"schedules\")          # Info on scheduled deposits  # Place a one time bank transfer (transfer_url comes from get_ach(RH, action = \"relationships\")) x = place_ach_transfer(RH, action = \"deposit\", amount = 2, transfer_url = transfer_url)  # Get status of a transfer get_ach(RH, action = \"status\", status_url = x$status_url)  # Cancel a pending transfer cancel_ach_transfer(RH, cancel_url = x$cancel_url)"},{"path":"https://jestonblu.github.io/RobinHood/articles/getting_started.html","id":"investment-positions","dir":"Articles","previous_headings":"","what":"Investment Positions","title":"Getting Started","text":"","code":"# Returns a data frame of stock ownership positions get_positions(RH)  #  simple_name symbol quantity average_buy_price last_trade_price cost current_value          updated_at #           GE     GE        1               8.5             8.73  8.5          8.73 2019-01-10 04:19:01 #        Zynga   ZNGA        2               0.0             4.27  0.0          8.54 2019-01-06 16:44:03  # Returns a data frame of current crypto currency holdings get_positions_crypto(RH)  #  symbol             name quantity market_value cost_bases gain_loss          created_at #    DOGE         Dogecoin     3261         8.09      10.01     -1.92 2019-07-15 21:08:19 #     ETC Ethereum Classic       10        66.97      39.30     27.67 2019-02-01 00:23:40"},{"path":"https://jestonblu.github.io/RobinHood/articles/getting_started.html","id":"funadmentals-quotes-historicals-and-analyst-ratings","dir":"Articles","previous_headings":"","what":"Funadmentals, Quotes, Historicals, and Analyst Ratings","title":"Getting Started","text":"","code":"# Get instrument fundamentals get_fundamentals(RH, \"CAT\")  # Structure # $ open                  : num 135 # $ high                  : num 138 # $ low                   : num 134 # $ volume                : num 2021397 # $ average_volume_2_weeks: num 4429974 # $ average_volume        : num 5480144 # $ high_52_weeks         : num 173 # $ dividend_yield        : num 1.97 # $ low_52_weeks          : num 112 # $ market_cap            : num 8.06e+10 # $ pe_ratio              : num 21.8 # $ shares_outstanding    : num 5.9e+08 # $ ceo                   : chr \"Donald James Umpleby, III\" # $ headquarters_city     : chr \"Deerfield\" # $ headquarters_state    : chr \"Illinois\" # $ sector                : chr \"Producer Manufacturing\" # $ industry              : chr \"Trucks Or Construction Or Farm Machinery\" # $ num_employees         : int 98400 # $ year_founded          : int 1925  # Get quotes get_quote(RH, symbol = c(\"CAT\", \"GE\"), limit_output = TRUE)  #  symbol last_trade_price last_trade_price_source #     CAT           131.66            consolidated #      GE             8.98            consolidated  # Get crypto currency quotes (only one symbol at a time here) get_quote_crypto(RH, symbol = \"ETC\") # symbol ask_price bid_price mark_price high_price low_price open_price   volume #    ETC  6.698958  6.684054   6.691506      7.006     6.257     6.4935 38310780  # Get historical prices get_historicals(RH, \"CAT\", interval = \"30minute\", span = \"day\")    # Every 30 minutes for the current day  #  begins_at open_price close_price high_price  low_price   volume session interpolated # 2019-02-25     140.99      137.47     142.55     135.27 22995597     reg        FALSE # 2019-03-04     138.80      131.35     139.77     130.23 19397486     reg        FALSE # 2019-03-11     131.91      132.67     134.53     131.59 23201154     reg        FALSE # 2019-03-18     132.70      129.77     135.71     129.49 19314924     reg        FALSE  get_historicals(RH, \"CAT\", interval = \"day\",      span = \"week\")   # Every day for the current week get_historicals(RH, \"CAT\", interval = \"week\",     span = \"3month\") # Every week for the last 3 months get_historicals(RH, \"CAT\", interval = \"month\",    span = \"year\")   # Every month for the current year  # Get analyst ratings get_ratings(RH, symbol = \"CAT\")  # $buy_percent # 0.4615385 # # $summary #   num_buy_ratings num_hold_ratings num_sell_ratings #                12               13                1 # # $comments #           published_at type text # 2021-01-02T00:43:10Z  buy Caterpillar’s dealer network is remarkably strong; owners of Caterpillar... # 2021-01-02T00:43:10Z sell Chinese competitors may take market share through aggressive pricing and... # 2021-01-02T00:43:10Z sell urrent operating margins may be unsustainable and represent peak cycle... # 2021-01-02T00:43:10Z sell Caterpillar participates in highly cyclical industries, which will... # 2021-01-02T00:43:10Z  buy Management has shown an ability to improve operating margins through... # 2021-01-02T00:43:10Z  buy Many of the segments in which Caterpillar operates are currently below..."},{"path":"https://jestonblu.github.io/RobinHood/articles/getting_started.html","id":"orders","dir":"Articles","previous_headings":"","what":"Orders","title":"Getting Started","text":"","code":"# Place Order, should generate an email x = place_order(RH            = RH,                 symbol        = \"GE\",        # Ticker symbol you want to trade                 type          = \"market\",    # Type of market order                 time_in_force = \"gfd\",       # Time period the order is good for (gfd: good for day)                 trigger       = \"immediate\", # Trigger or delay order                 price         = 8.96,        # The highest price you are willing to pay                 quantity      = 1,           # Number of shares you want                 side          = \"buy\")       # buy or sell  # Structure # $ updated_at               : POSIXct # $ ref_id                   : chr # $ time_in_force            : chr # $ fees                     : num # $ cancel                   : chr (url needed to cancel order) # $ response_category        : chr # $ id                       : chr # $ cumulative_quantity      : num # $ stop_price               : num # $ reject_reason            : num # $ instrument               : chr # $ state                    : chr # $ trigger                  : chr # $ override_dtbp_checks     : logi # $ type                     : chr # $ last_transaction_at      : POSIXct # $ price                    : num # $ executions               : list() # $ extended_hours           : logi # $ account                  : chr # $ url                      : chr (url for checking order status) # $ created_at               : POSIXct # $ side                     : chr # $ override_day_trade_checks: logi # $ position                 : chr # $ average_price            : num # $ quantity                 : num  # Stop loss example place_order(RH,             symbol=\"ABC\",             type = 'market',             trigger = 'stop',             stop_price = 100,             time_in_force = \"gtc\",     # Good till close             quantity = 10,             side = 'sell')  # Crypto works the same way x = place_order_crypto(RH,                        symbol        = \"DOGE\",                        type          = \"market\",                        time_in_force = \"gtc\",                        price         = .002,                        quantity      = 400,                        side          = \"buy\")  # Structure # $ account_id               : chr # $ cancel_url               : chr # $ created_at               : POSIXct[1:1] # $ cumulative_quantity      : num # $ currency_pair_id         : chr # $ executions               : list() # $ id                       : chr # $ last_transaction_at      : NULL # $ price                    : num # $ quantity                 : num # $ ref_id                   : chr # $ rounded_executed_notional: num # $ side                     : chr # $ state                    : chr # $ time_in_force            : chr # $ type                     : chr # $ updated_at               : POSIXct[1:1]  # Check the status of an order get_order_status(RH, x$url) get_order_status_crypto(RH, x$id)  # $updated_at # [1] \"2019-01-20T13:57:44.329458Z\" # # $time_in_force # [1] \"gfd\" # # $state # [1] \"queued\" # # $type # [1] \"market\" # # $executions # list()  # Cancel an order (should generate an email) cancel_order(RH, x$cancel) cancel_order_crypto(RH, x$cancel_url)  # One of 2 messages you may receive # \"Order canceled\" # \"You may have already canceled this order, check order_status()\"  # Get order History get_order_history(RH)  # Structure # $ created_at   : POSIXct # $ symbol       : chr # $ side         : chr # $ price        : num # $ quantity     : num # $ fees         : num # $ state        : chr # $ average_price: num # $ type         : chr # $ trigger      : chr # $ time_in_force: chr # $ updated_at   : POSIXct  get_order_history_crypto(RH)  # Structure # $ name                : chr # $ symbol              : chr # $ created_at          : POSIXct # $ price               : num # $ exec_effective_price: num # $ exec_quantity       : num # $ side                : chr # $ state               : chr # $ time_in_force       : chr # $ type                : chr"},{"path":"https://jestonblu.github.io/RobinHood/articles/getting_started.html","id":"market-hours","dir":"Articles","previous_headings":"","what":"Market Hours","title":"Getting Started","text":"","code":"# Get market hours for a specific date get_market_hours(RH)  #                            name     city             website   timezone acronym opens_at closes_at # 1                    IEX Market New York  www.iextrading.com US/Eastern     IEX 08:30:00  15:00:00 # 2                   Otc Markets New York  www.otcmarkets.com US/Eastern    OTCM 08:30:00  15:00:00 # 3                  NYSE Mkt Llc New York        www.nyse.com US/Eastern    AMEX 08:30:00  15:00:00 # 4                     NYSE Arca New York        www.nyse.com US/Eastern    NYSE 08:30:00  15:00:00 # 5 New York Stock Exchange, Inc. New York        www.nyse.com US/Eastern    NYSE 08:30:00  15:00:00 # 6          NASDAQ - All Markets New York      www.nasdaq.com US/Eastern  NASDAQ 08:30:00  15:00:00 # 7                 BATS Exchange New York www.batstrading.com US/Eastern    BATS 08:30:00  15:00:00  #   extended_opens_at extended_closes_at is_open       date # 1          08:00:00           17:00:00    TRUE 2019-01-17 # 2          08:00:00           17:00:00    TRUE 2019-01-17 # 3          08:00:00           17:00:00    TRUE 2019-01-17 # 4          08:00:00           17:00:00    TRUE 2019-01-17 # 5          08:00:00           17:00:00    TRUE 2019-01-17 # 6          08:00:00           17:00:00    TRUE 2019-01-17 # 7          08:00:00           17:00:00    TRUE 2019-01-17"},{"path":"https://jestonblu.github.io/RobinHood/articles/getting_started.html","id":"tags","dir":"Articles","previous_headings":"","what":"Tags","title":"Getting Started","text":"","code":"# You can identify instruments by popular tags get_tag(RH, tag = \"100-most-popular\")  #  [1] \"AAPL\" \"GE\" \"ACB\" \"F\" \"CRON\" \"MSFT\" \"FB\" ...  # Known Tags # #   top-movers #   etf #   100-most-popular #   finance #   cap-weighted #   investment-trust-or-fund #   upcoming-earnings #   china #   healthcare #   technology #   hospitality #   banking #   automotive #   agriculture #   energy #   finance #   entertainment #"},{"path":"https://jestonblu.github.io/RobinHood/articles/getting_started.html","id":"watchlist","dir":"Articles","previous_headings":"","what":"Watchlist","title":"Getting Started","text":"","code":"watchlist(RH, action = 'get') # [1] \"Default\"  watchlist(RH, action = 'get', watchlist = 'Default') # [1] \"AAPL\" \"TWTR\" \"TSLA\" \"NFLX\" \"FB\"   \"MSFT\" \"DIS\"  \"GPRO\" ...  watchlist(RH, action = 'add', watchlist = 'Default', ticker = \"CAT\") # \"Instrument added to watchlist\"  watchlist(RH, action = 'delete', watchlist = 'Default', ticker = \"CAT\") # \"Instrument removed from watchlist\""},{"path":"https://jestonblu.github.io/RobinHood/articles/network_graph.html","id":"simplified-network-with-endpoints-connection-removed","dir":"Articles","previous_headings":"","what":"Simplified Network with Endpoints Connection Removed","title":"Function Network Graph","text":"```{r simplified_network # #edges2 = subset(edges, api_action != ‘None’) # #g2 <- simplify(graph_from_data_frame(edges2, vertices = nodes)) # #set.seed(1) #ggnet2(g2, size = 0, color = “type”, edge.lty = “dashed”, layout.exp = .15) + # geom_point(aes(x = x, y = y), color = “grey15”, size = 7) + # geom_text(aes(label = label, x = x, y = y, color = color), size = 3) + # scale_color_brewer(type = “qual”, palette = 4, guide = “none”) + # theme(panel.background = element_rect(fill = “grey15”)) # ```","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joseph Blubaugh. Maintainer.","code":""},{"path":"https://jestonblu.github.io/RobinHood/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Blubaugh J (2023). RobinHood: Interface RobinHood.com Commission Investing Platform. https://github.com/JestonBlu/RobinHood, https://jestonblu.github.io/RobinHood/.","code":"@Manual{,   title = {RobinHood: Interface for the RobinHood.com No Commission Investing Platform},   author = {Joseph Blubaugh},   year = {2023},   note = {https://github.com/JestonBlu/RobinHood, https://jestonblu.github.io/RobinHood/}, }"},{"path":"https://jestonblu.github.io/RobinHood/index.html","id":"robinhood","dir":"","previous_headings":"","what":"RobinHood","title":"Interface for the RobinHood.com No Commission Investing Platform","text":"package designed help execute trading programs R. RobinHood commission trading platform intended bring investing masses. great place experiment different trading strategies minimal investment trades eaten commission fees.","code":""},{"path":"https://jestonblu.github.io/RobinHood/index.html","id":"account-features","dir":"","previous_headings":"","what":"Account Features","title":"Interface for the RobinHood.com No Commission Investing Platform","text":"Account data Add remove investments watchlist Execute ACH transfers MFA enabled","code":""},{"path":"https://jestonblu.github.io/RobinHood/index.html","id":"equity-features","dir":"","previous_headings":"","what":"Equity Features","title":"Interface for the RobinHood.com No Commission Investing Platform","text":"Get current holdings Access investment statistics quotes Place cancel orders Get order status Get price history Get order history Get market open/close hours Search investments popular tag Calculate historical account balance Get options market data Get options positions Get analyst ratings","code":""},{"path":"https://jestonblu.github.io/RobinHood/index.html","id":"crypto-features","dir":"","previous_headings":"","what":"Crypto Features","title":"Interface for the RobinHood.com No Commission Investing Platform","text":"Get current holdings Get order history Get quotes Place cancel orders Get order status Note: key difference CRAN version Github version API functions exported available call directly. intended primarily help development bug fixes. CRAN version, API functions exported instead called behind scenes.","code":""},{"path":"https://jestonblu.github.io/RobinHood/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface for the RobinHood.com No Commission Investing Platform","text":"","code":"# CRAN version install.packages(\"RobinHood\")  # Development version devtools::install_github(\"jestonblu/RobinHood\")"},{"path":"https://jestonblu.github.io/RobinHood/reference/RobinHood.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood Account Authentication — RobinHood","title":"RobinHood Account Authentication — RobinHood","text":"function returns object S3 class RobinHood establishes connection RobinHood account. required input every function package.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/RobinHood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood Account Authentication — RobinHood","text":"","code":"RobinHood(username, password, mfa_code)"},{"path":"https://jestonblu.github.io/RobinHood/reference/RobinHood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood Account Authentication — RobinHood","text":"username (string) account email address password (string) password mfa_code (string) mfa_code provided authentication app (required mfa enabled)","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/RobinHood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RobinHood Account Authentication — RobinHood","text":"","code":"if (FALSE) { RH <- RobinHood(\"username\", \"password\") }"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_accounts.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: User — api_accounts","title":"RobinHood API: User — api_accounts","text":"Backend function called get_user(),'returns list user account data.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_accounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: User — api_accounts","text":"","code":"api_accounts(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_accounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: User — api_accounts","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_accounts_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: User Crypto — api_accounts_crypto","title":"RobinHood API: User Crypto — api_accounts_crypto","text":"Backend function calls Nummus API return account id.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_accounts_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: User Crypto — api_accounts_crypto","text":"","code":"api_accounts_crypto(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_accounts_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: User Crypto — api_accounts_crypto","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_ach.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: ACH — api_ach","title":"RobinHood API: ACH — api_ach","text":"Backend function interacting getting data linked bank accounts.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_ach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: ACH — api_ach","text":"","code":"api_ach(   RH,   action,   amount = NULL,   status_url = NULL,   cancel_url = NULL,   transfer_url = NULL )"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_ach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: ACH — api_ach","text":"RH object class RobinHood action (string) one \"transfers\", \"relationships\", \"schedules\", \"status\", \"cancel\", \"deposit\", \"withdraw\" amount (numeric) amount dollars want deposit withdraw (NULL one actions) status_url (string) URL returned place_ach_transfer() cancel_url (string) URL returned place_ach_transfer() transfer_url (string) url linked account, output get_ach(RH, \"relationships\")","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_contracts.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Option Contract Instruments — api_contracts","title":"RobinHood API: Option Contract Instruments — api_contracts","text":"RobinHood API: Option Contract Instruments","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_contracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Option Contract Instruments — api_contracts","text":"","code":"api_contracts(RH, chain_symbol, type)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_contracts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Option Contract Instruments — api_contracts","text":"RH object class RobinHood chain_symbol (string) single ticker symbol type (string) one call put","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_currency_pairs.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Currency Pairs — api_currency_pairs","title":"RobinHood API: Currency Pairs — api_currency_pairs","text":"Returns ID particular paired currency","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_currency_pairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Currency Pairs — api_currency_pairs","text":"","code":"api_currency_pairs(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_currency_pairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Currency Pairs — api_currency_pairs","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Endpoints — api_endpoints","title":"RobinHood API: Endpoints — api_endpoints","text":"Backend function called almost every function. Returns appropriate starting URL given endpoint.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Endpoints — api_endpoints","text":"","code":"api_endpoints(endpoint, source = \"equity\")"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Endpoints — api_endpoints","text":"endpoint (string) api endpoint look ? source (string) directs api api.robinhood.com (equity) vs nummus.robinhood.com (crypto)","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_fundamentals.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Fundamentals — api_fundamentals","title":"RobinHood API: Fundamentals — api_fundamentals","text":"Backend function called get_fundamentals(), watchlist(). Returns data frame descriptive data given ticker symbol.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_fundamentals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Fundamentals — api_fundamentals","text":"","code":"api_fundamentals(RH, ticker)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_fundamentals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Fundamentals — api_fundamentals","text":"RH object class RobinHood ticker (string) vector ticker symbols","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_historicals.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Historicals — api_historicals","title":"RobinHood API: Historicals — api_historicals","text":"Backend function called get_historicals(). Returns data frame historical price data.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_historicals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Historicals — api_historicals","text":"","code":"api_historicals(RH, historicals_url, body)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_historicals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Historicals — api_historicals","text":"RH object class RobinHood historicals_url (string) api url body (string) api body","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_historicals_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Historicals crypto — api_historicals_crypto","title":"RobinHood API: Historicals crypto — api_historicals_crypto","text":"Backend function called get_historicals_crypto(). Returns data frame historical price data.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_historicals_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Historicals crypto — api_historicals_crypto","text":"","code":"api_historicals_crypto(RH, url)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_historicals_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Historicals crypto — api_historicals_crypto","text":"RH object class RobinHood url (string) full url coming get_historicals_crypto","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_historicals_options.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Historicals Options — api_historicals_options","title":"RobinHood API: Historicals Options — api_historicals_options","text":"Backend function called get_historicals_options().","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_historicals_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Historicals Options — api_historicals_options","text":"","code":"api_historicals_options(   RH,   chain_symbol,   type,   strike_price,   expiration_date,   interval = NULL,   span = NULL )"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_historicals_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Historicals Options — api_historicals_options","text":"RH object class RobinHood chain_symbol (string) stock symbol type (string) one (\"put\", \"call\") strike_price (numeric) strike price expiration_date (string) expiration date (YYYY-MM-DD) interval (string) one (\"5minute\", \"10minute\", \"hour\", \"day\", \"week\") span (string) one (\"day\", \"week\", \"month\")","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_instruments.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Instruments — api_instruments","title":"RobinHood API: Instruments — api_instruments","text":"Backend function called get_tag(), get_position(), watchlist(). Returns list instrument data.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_instruments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Instruments — api_instruments","text":"","code":"api_instruments(RH, symbol = NULL, instrument_url = NULL)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_instruments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Instruments — api_instruments","text":"RH object class RobinHood symbol (string) single symbol instrument_url (string) instrument url","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_instruments_options.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Option Contracts — api_instruments_options","title":"RobinHood API: Option Contracts — api_instruments_options","text":"Backend function retrieving option contracts.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_instruments_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Option Contracts — api_instruments_options","text":"","code":"api_instruments_options(   RH,   method = \"url\",   option_instrument_url = NULL,   chain_symbol = NULL,   type = NULL,   state = NULL,   strike_price = NULL,   tradability = NULL,   expiration_date = NULL )"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_instruments_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Option Contracts — api_instruments_options","text":"RH object class RobinHood method (string) one (\"url\", \"symbol\") option_instrument_url (string) direct url option contract chain_symbol (string) stock symbol type (string) one (\"put\", \"call\") state (string) one (\"active\", \"inactive\") strike_price (numeric) strike price tradability (string) one (\"tradable\", \"untradable\") expiration_date (string) expiration date (\"YYYY-MM-DD\")","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_login.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Login — api_login","title":"RobinHood API: Login — api_login","text":"Backend function called RobinHood(). Returns list like object class RobinHood stores tokens required functions.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Login — api_login","text":"","code":"api_login(username, password, mfa_code)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Login — api_login","text":"username (string) RobinHood username password (string) RobinHood password mfa_code (string) Provided authentication app","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_logout.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Logout — api_logout","title":"RobinHood API: Logout — api_logout","text":"Backend function called logout(). Sends logout call disables oauth2 token.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_logout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Logout — api_logout","text":"","code":"api_logout(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_logout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Logout — api_logout","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_marketdata.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Market Data — api_marketdata","title":"RobinHood API: Market Data — api_marketdata","text":"Returns dataframe quantitative market information particular option instrument","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_marketdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Market Data — api_marketdata","text":"","code":"api_marketdata(RH, instrument, type = \"instrument_id\")"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_marketdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Market Data — api_marketdata","text":"RH object class RobinHood instrument (string) single instrument_id multiple instrument_urls type (string) one instrument_id instrument_url","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_markets.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Markets — api_markets","title":"RobinHood API: Markets — api_markets","text":"Backend function called get_market_hours(). Returns data frame markets data trading hours.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_markets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Markets — api_markets","text":"","code":"api_markets(RH, markets_url, type = \"df\")"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_markets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Markets — api_markets","text":"RH object class RobinHood markets_url (string) single market url type (string) structure data returned, 'df' 'list'","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_orders.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Orders — api_orders","title":"RobinHood API: Orders — api_orders","text":"Backend function called place_order(), get_order_status(), cancel_order(). Issues buy/sell order returns status order. issuing buy order use url column return data check status cancel order.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_orders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Orders — api_orders","text":"","code":"api_orders(   RH,   action,   status_url = NULL,   cancel_url = NULL,   instrument_id = NULL,   symbol = NULL,   type = NULL,   time_in_force = NULL,   trigger = NULL,   price = NULL,   stop_price = NULL,   quantity = NULL,   side = NULL,   page_size = NULL )"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_orders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Orders — api_orders","text":"RH object class RobinHood action (string) one \"order\", \"status\", \"cancel\", \"history\" status_url (string) action = \"status\", status_url required (output place_order()) cancel_url (string) action = \"cancel\", cancel_url required (output place_order()) instrument_id (string) URL instrument_id symbol (string) Ticket symbol attempting buy sell type (string) \"market\" \"limit\" time_in_force (string) Good Day (\"gfd\"), Good Till Canceled (\"gtc\"), Immediate Cancel (\"ioc\"), Opening (\"opg\") trigger (string) \"immediate\" \"stop\" price (number) price willing sell buy stop_price (number) trigger = stop, enter stop price, otherwise leave blank quantity (int) number shares wish transact side (string) \"buy\" \"sell\" page_size (int) get_order_history, refers number historical records return","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_orders_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Orders Crypto — api_orders_crypto","title":"RobinHood API: Orders Crypto — api_orders_crypto","text":"Backend function called place_order(), get_order_status(), cancel_order(). Issues buy/sell order returns status order. issuing buy order use url column return data check status cancel order.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_orders_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Orders Crypto — api_orders_crypto","text":"","code":"api_orders_crypto(   RH,   action,   order_id = NULL,   cancel_url = NULL,   currency_pair_id = NULL,   type = NULL,   time_in_force = NULL,   price = NULL,   quantity = NULL,   side = NULL )"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_orders_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Orders Crypto — api_orders_crypto","text":"RH object class RobinHood action (string) one \"order\", \"status\", \"cancel\", \"history\" order_id (string) action \"status\" \"cancel\", order_id required cancel_url (string) url posting cancel order currency_pair_id (string) currency pair id type (string) \"market\" \"limit\" time_in_force (string) Good Day (\"gfd\"), Good Till Canceled (\"gtc\"), Immediate Cancel (\"ioc\"), Opening (\"opg\") price (number) price willing sell buy quantity (int) number shares wish transact side (string) \"buy\" \"sell\"","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_orders_options.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Option Orders — api_orders_options","title":"RobinHood API: Option Orders — api_orders_options","text":"RobinHood API: Option Orders","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_orders_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Option Orders — api_orders_options","text":"","code":"api_orders_options(   RH,   action,   status_url = NULL,   cancel_url = NULL,   quantity = NULL,   direction = NULL,   stop_price = NULL,   type = NULL,   time_in_force = NULL,   side = NULL,   option_id = NULL )"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_orders_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Option Orders — api_orders_options","text":"RH object class RobinHood action (string) one \"order\", \"status\", \"cancel\", \"history\" status_url (string) action = \"status\", status_url required (output place_order_options()) cancel_url (string) action = \"cancel\", cancel_url required (output place_order_options()) quantity (int) number contracts want buy direction (string) one \"debit\" \"credit\" stop_price (numeric) stop price limit order type (string) one \"limit\" \"market\" time_in_force (string) Good Till Canceled (\"gtc\"), Immediate Cancel (\"ioc\"), Opening (\"opg\") side (string) one \"buy\" \"sell\" option_id (string) id column returned get_contracts()","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_portfolios.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Portfolio — api_portfolios","title":"RobinHood API: Portfolio — api_portfolios","text":"Backend function called get_portfolio(). Returns data frame account summaries.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_portfolios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Portfolio — api_portfolios","text":"","code":"api_portfolios(RH, portfolio_url)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_portfolios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Portfolio — api_portfolios","text":"RH object class RobinHood portfolio_url portfolio url","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_portfolios_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Portfolio Crypto — api_portfolios_crypto","title":"RobinHood API: Portfolio Crypto — api_portfolios_crypto","text":"Backend function called get_portfolio(..., source = \"crypto\"). Returns data frame current crypto portolio summary.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_portfolios_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Portfolio Crypto — api_portfolios_crypto","text":"","code":"api_portfolios_crypto(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_portfolios_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Portfolio Crypto — api_portfolios_crypto","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Positions — api_positions","title":"RobinHood API: Positions — api_positions","text":"Backend function called get_positions(). Returns data frame instrument position data.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Positions — api_positions","text":"","code":"api_positions(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Positions — api_positions","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_positions_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Cryptocurrency Positions — api_positions_crypto","title":"RobinHood API: Cryptocurrency Positions — api_positions_crypto","text":"Backend function called get_positions(). Returns data frame crypto position data via Nummus api.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_positions_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Cryptocurrency Positions — api_positions_crypto","text":"","code":"api_positions_crypto(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_positions_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Cryptocurrency Positions — api_positions_crypto","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_positions_options.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Option Contract Positions — api_positions_options","title":"RobinHood API: Option Contract Positions — api_positions_options","text":"Backend function called get_positions_options(). Returns data frame owned options contracts.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_positions_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Option Contract Positions — api_positions_options","text":"","code":"api_positions_options(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_positions_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Option Contract Positions — api_positions_options","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_quote.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Quote — api_quote","title":"RobinHood API: Quote — api_quote","text":"Backend function called get_positions(), get_quote(), place_order(). Returns data frame quote data","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_quote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Quote — api_quote","text":"","code":"api_quote(RH, symbols_url)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_quote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Quote — api_quote","text":"RH object class RobinHood symbols_url (string) url query ticker symbols","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_quote_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Quotes for cryptocurrency — api_quote_crypto","title":"RobinHood API: Quotes for cryptocurrency — api_quote_crypto","text":"Returns dataframe current quotes","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_quote_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Quotes for cryptocurrency — api_quote_crypto","text":"","code":"api_quote_crypto(RH, symbols_url)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_quote_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Quotes for cryptocurrency — api_quote_crypto","text":"RH object class RobinHood symbols_url (string) url query ticker symbols","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_ratings.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Analyst ratings — api_ratings","title":"RobinHood API: Analyst ratings — api_ratings","text":"Backend function called get_ratings() get analyst rating RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_ratings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Analyst ratings — api_ratings","text":"","code":"api_ratings(RH, symbol)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_ratings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Analyst ratings — api_ratings","text":"RH object class RobinHood symbol (string)","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Tag — api_tag","title":"RobinHood API: Tag — api_tag","text":"Backend function called get_tag(). Returns list instrument ids.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Tag — api_tag","text":"","code":"api_tag(RH, tag)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Tag — api_tag","text":"RH object class RobinHood tag (string) hyphenated tag \"100--popular\"","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_tickers.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: Tickers — api_tickers","title":"RobinHood API: Tickers — api_tickers","text":"Backend function called get_ticker. Returns data frame instruments listed RobinHood.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_tickers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: Tickers — api_tickers","text":"","code":"api_tickers(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_tickers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: Tickers — api_tickers","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_user.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: User — api_user","title":"RobinHood API: User — api_user","text":"Backend function called get_user() return user data","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: User — api_user","text":"","code":"api_user(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: User — api_user","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_watchlist.html","id":null,"dir":"Reference","previous_headings":"","what":"RobinHood API: watchlist — api_watchlist","title":"RobinHood API: watchlist — api_watchlist","text":"Backend function called watchlist(). Adds remove instruments default watchlist. create delete watchlist features disabled appears functionality currently available plateform.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/api_watchlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RobinHood API: watchlist — api_watchlist","text":"","code":"api_watchlist(RH, watchlist_url, detail = FALSE, delete = FALSE)"},{"path":"https://jestonblu.github.io/RobinHood/reference/api_watchlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RobinHood API: watchlist — api_watchlist","text":"RH object class RobinHood watchlist_url (string) single watchlist url detail (logical) null use header api , otherwise pass options delete (logical) send delete call","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_ach_transfer.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel an ACH transfer from your RobinHood account — cancel_ach_transfer","title":"Cancel an ACH transfer from your RobinHood account — cancel_ach_transfer","text":"Cancel ACH transfer RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_ach_transfer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel an ACH transfer from your RobinHood account — cancel_ach_transfer","text":"","code":"cancel_ach_transfer(RH, cancel_url)"},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_ach_transfer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel an ACH transfer from your RobinHood account — cancel_ach_transfer","text":"RH object class RobinHood cancel_url (string) cancel url returned initiating transfer place_ach_transfer()","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel an existing order on RobinHood — cancel_order","title":"Cancel an existing order on RobinHood — cancel_order","text":"Send cancel signal particular order RobinHood. need retain buy/sell order url returned place_order.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel an existing order on RobinHood — cancel_order","text":"","code":"cancel_order(RH, cancel_url)"},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel an existing order on RobinHood — cancel_order","text":"RH object class RobinHood cancel_url (string) cancel url returned place_order()","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancel an existing order on RobinHood — cancel_order","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  # Place an order, should generate an email confirmation x <- place_order(RH = RH,                  symbol = \"GE\",          # Ticker symbol you want to trade                  type = \"market\",        # Type of market order                  time_in_force = \"gfd\",  # Time period the order is good for (gfd: good for day)                  trigger = \"immediate\",  # Trigger or delay order                  price = 8.96,           # The highest price you are willing to pay                  quantity = 1,           # Number of shares you want                  side = \"buy\")           # buy or sell  # Cancel the order, should also generate an email confirmation cancel_order(RH, x$cancel_url) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel an existing crypto order on RobinHood — cancel_order_crypto","title":"Cancel an existing crypto order on RobinHood — cancel_order_crypto","text":"Send cancel signal particular order RobinHood. need retain buy/sell order url returned place_order.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel an existing crypto order on RobinHood — cancel_order_crypto","text":"","code":"cancel_order_crypto(RH, cancel_url)"},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel an existing crypto order on RobinHood — cancel_order_crypto","text":"RH object class RobinHood cancel_url (string) cancel url returned place_order_crypto()","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order_crypto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancel an existing crypto order on RobinHood — cancel_order_crypto","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  # Place an order, should generate an email confirmation x <- place_order_crypto(RH = RH,                         symbol = \"ETC\",         # Ticker symbol                         type = \"market\",        # Type of market order (market, limit)                         time_in_force = \"gtc\",  # Time period (gfd: good for day)                         price = 1,              # The highest price you are willing to pay                         quantity = 1,           # Number of shares you want                         side = \"buy\")           # buy or sell  # Cancel the order, should also generate an email confirmation cancel_order_crypto(RH, x$cancel_url) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel an existing options order on RobinHood — cancel_order_options","title":"Cancel an existing options order on RobinHood — cancel_order_options","text":"Send cancel signal particular order RobinHood. need retain buy/sell order url returned place_order_options().","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel an existing options order on RobinHood — cancel_order_options","text":"","code":"cancel_order_options(RH, cancel_url)"},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel an existing options order on RobinHood — cancel_order_options","text":"RH object class RobinHood cancel_url (string) cancel url returned place_order()","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/cancel_order_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cancel an existing options order on RobinHood — cancel_order_options","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  # Place an order, should generate an email confirmation x <- place_order_options(RH = RH,                        option_id = \"346e46af-380e-4052-a7c2-15748f0fc0ca\",                        direction = \"debit\",   # one of \"debit\" or \"credit\"                        side = \"buy\",          # one of \"buy\" or \"sell\"                        quantity = 1,          # number of contracts                        stop_price = .01,      # Time period (gfd: good for day)                        type = \"limit\",        # limit or market (only limit is currently supported)                        time_in_force = \"gtc\") # \"gfd\", \"gtc\", \"ioc\", \"opg\"  # Cancel the order, should also generate an email confirmation cancel_order_options(RH, x$cancel_url) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/check_rh.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks to see if you have a valid RobihHood object — check_rh","title":"Checks to see if you have a valid RobihHood object — check_rh","text":"Checks see valid RobihHood object","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/check_rh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks to see if you have a valid RobihHood object — check_rh","text":"","code":"check_rh(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/check_rh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks to see if you have a valid RobihHood object — check_rh","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_accounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data related to your RobinHood account — get_accounts","title":"Get data related to your RobinHood account — get_accounts","text":"Get data related RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_accounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data related to your RobinHood account — get_accounts","text":"","code":"get_accounts(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_accounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data related to your RobinHood account — get_accounts","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_accounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data related to your RobinHood account — get_accounts","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_accounts(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_ach.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ACH data from your RobinHood linked bank accounts — get_ach","title":"Get ACH data from your RobinHood linked bank accounts — get_ach","text":"Get ACH data RobinHood linked bank accounts","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_ach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ACH data from your RobinHood linked bank accounts — get_ach","text":"","code":"get_ach(RH, action, status_url = NULL)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_ach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ACH data from your RobinHood linked bank accounts — get_ach","text":"RH object class RobinHood action (string) one \"transfers\", \"relationships\", \"schedules\", \"status\" status_url (string) URL returned place_ach_transfer()","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_contracts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a option contracts from RobinHood — get_contracts","title":"Get a option contracts from RobinHood — get_contracts","text":"Get option contracts RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_contracts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a option contracts from RobinHood — get_contracts","text":"","code":"get_contracts(RH, chain_symbol, type, detail = FALSE)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_contracts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a option contracts from RobinHood — get_contracts","text":"RH object class RobinHood chain_symbol (string) single ticket symbol type (string) one call put detail (logical) TRUE (default) return additional info greeks, prevous day, high/low fill rate prices","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_contracts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a option contracts from RobinHood — get_contracts","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_contracts(RH, \"IR\") }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_fundamentals.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fundamental investment statistics for a particular ticker symbol — get_fundamentals","title":"Get fundamental investment statistics for a particular ticker symbol — get_fundamentals","text":"Get fundamental investment statistics particular ticker symbol","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_fundamentals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fundamental investment statistics for a particular ticker symbol — get_fundamentals","text":"","code":"get_fundamentals(RH, ticker, include_description = FALSE)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_fundamentals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fundamental investment statistics for a particular ticker symbol — get_fundamentals","text":"RH object class RobinHood ticker (string) vector ticker symbols include_description (logical) include long description company (default: FALSE)","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_fundamentals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get fundamental investment statistics for a particular ticker symbol — get_fundamentals","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_fundamentals(RH, \"CAT\") }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals.html","id":null,"dir":"Reference","previous_headings":"","what":"Get historical price history from RobinHood — get_historicals","title":"Get historical price history from RobinHood — get_historicals","text":"Returns data frame historical price history given symbol.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get historical price history from RobinHood — get_historicals","text":"","code":"get_historicals(RH, symbol, interval, span, tz = Sys.timezone())"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get historical price history from RobinHood — get_historicals","text":"RH object class RobinHood symbol (string) Stock symbol query, single symbol interval (string) Interval time aggregate (examples: hour, day, week, month) span (string) Period time interested (examples: day, week, month, year) tz (string) timezone returned OlsonNames() (eg: \"America/Chicago\")","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get historical price history from RobinHood — get_historicals","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_historicals(RH = RH, symbol = \"CAT\", interval = \"day\", span = \"month\")  }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"Get historical crypto price history from RobinHood — get_historicals_crypto","title":"Get historical crypto price history from RobinHood — get_historicals_crypto","text":"Returns data frame historical crypto price history given symbol. Note combinations interval/span bounds return results. Spans go beyond day (week, month, year) return results certain bounds values (trading, extended). function return message specify combination inputs returns results.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get historical crypto price history from RobinHood — get_historicals_crypto","text":"","code":"get_historicals_crypto(RH, symbol, interval, span, bounds, tz = Sys.timezone())"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get historical crypto price history from RobinHood — get_historicals_crypto","text":"RH object class RobinHood symbol (string) ticker symbol crypto (BTC, ETH, ETC) interval (string) Interval time aggregate (examples: hour, day, week, month) span (string) Period time interested (examples: day, week, month, year) bounds (string) One regular (6 hours), trading (9 hours), extended (16 hours), 24_7 tz (string) timezone returned OlsonNames() (eg: \"America/Chicago\")","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals_crypto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get historical crypto price history from RobinHood — get_historicals_crypto","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_historicals_crypto(RH, symbol = \"ETC\", interval = \"5minute\", span = \"day\", bounds = 'regular') get_historicals_crypto(RH, symbol = \"ETC\", interval = \"5minute\", span = \"day\", bounds = 'trading') get_historicals_crypto(RH, symbol = \"ETC\", interval = \"5minute\", span = \"day\", bounds = 'extended') get_historicals_crypto(RH, symbol = \"ETC\", interval = \"5minute\", span = \"day\", bounds = '24_7')  }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Get historical options from RobinHood — get_historicals_options","title":"Get historical options from RobinHood — get_historicals_options","text":"Returns data frame historical options given symbol, strike price, expiration date.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get historical options from RobinHood — get_historicals_options","text":"","code":"get_historicals_options(   RH,   chain_symbol,   type,   strike_price,   expiration_date,   interval = NULL,   span = NULL )"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get historical options from RobinHood — get_historicals_options","text":"RH object class RobinHood chain_symbol (string) stock symbol type (string) one (\"put\", \"call\") strike_price (numeric) strike price expiration_date (string) expiration date (YYYY-MM-DD) interval (string) one (\"5minute\", \"10minute\", \"hour\", \"day\", \"week\") span (string) one (\"day\", \"week\", \"month\")","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_historicals_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get historical options from RobinHood — get_historicals_options","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_historicals_options(RH = RH, chain_symbol = \"AAPL\", interval = \"10minute\", type = \"call\",                         expiration_date = \"2021-03-12\", strike_price = 122)  }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_market_hours.html","id":null,"dir":"Reference","previous_headings":"","what":"Get open market hours — get_market_hours","title":"Get open market hours — get_market_hours","text":"Get list markets available RobinHood trading hours specific date.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_market_hours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get open market hours — get_market_hours","text":"","code":"get_market_hours(RH, market_date = NULL, tz = Sys.timezone())"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_market_hours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get open market hours — get_market_hours","text":"RH object class RobinHood market_date (string) date form 'yyyy-mm-dd', default today tz (string) one timezone returned OlsonNames(), defaults local","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_market_hours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get open market hours — get_market_hours","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_market_hours(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Download all available order history for your RobinHood account — get_order_history","title":"Download all available order history for your RobinHood account — get_order_history","text":"Download available order history RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download all available order history for your RobinHood account — get_order_history","text":"","code":"get_order_history(RH, page_size = 1000)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download all available order history for your RobinHood account — get_order_history","text":"RH object class RobinHood page_size (int) number historical records fetch","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download all available order history for your RobinHood account — get_order_history","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_order_history(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"Download all available crypto currency order history for your RobinHood account — get_order_history_crypto","title":"Download all available crypto currency order history for your RobinHood account — get_order_history_crypto","text":"Download available crypto currency order history RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download all available crypto currency order history for your RobinHood account — get_order_history_crypto","text":"","code":"get_order_history_crypto(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download all available crypto currency order history for your RobinHood account — get_order_history_crypto","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history_crypto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download all available crypto currency order history for your RobinHood account — get_order_history_crypto","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_order_history_crypto(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Download all available options order history for your RobinHood account — get_order_history_options","title":"Download all available options order history for your RobinHood account — get_order_history_options","text":"Download available options order history RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download all available options order history for your RobinHood account — get_order_history_options","text":"","code":"get_order_history_options(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download all available options order history for your RobinHood account — get_order_history_options","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_history_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download all available options order history for your RobinHood account — get_order_history_options","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_order_history(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a current status of an order on RobinHood — get_order_status","title":"Get a current status of an order on RobinHood — get_order_status","text":"Returns list order information given buy/sell order url returned place_order().","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a current status of an order on RobinHood — get_order_status","text":"","code":"get_order_status(RH, status_url, limit_output = TRUE)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a current status of an order on RobinHood — get_order_status","text":"RH object class RobinHood status_url (string) url order returned place_order limit_output (logical) return limited info order (default TRUE)","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a current status of an order on RobinHood — get_order_status","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  # Place an order, should generate an email confirmation x <- place_order(RH = RH,                  symbol = \"GE\",          # Ticker symbol you want to trade                  type = \"market\",        # Type of market order                  time_in_force = \"gfd\",  # Time period the order is good for (gfd: good for day)                  trigger = \"immediate\",  # Trigger or delay order                  price = 8.96,           # The highest price you are willing to pay                  quantity = 1,           # Number of shares you want                  side = \"buy\")           # buy or sell  get_order_status(RH, x$status_url) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a current status of an crypto currency order on RobinHood — get_order_status_crypto","title":"Get a current status of an crypto currency order on RobinHood — get_order_status_crypto","text":"Returns list order information given buy/sell order url returned place_order().","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a current status of an crypto currency order on RobinHood — get_order_status_crypto","text":"","code":"get_order_status_crypto(RH, order_id)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a current status of an crypto currency order on RobinHood — get_order_status_crypto","text":"RH object class RobinHood order_id (string) id field object returned place_order_crypto","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status_crypto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a current status of an crypto currency order on RobinHood — get_order_status_crypto","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  # Place an order, should generate an email confirmation x <- place_order_crypto(RH = RH,                        symbol = \"GE\",          # Ticker symbol you want to trade                        type = \"market\",        # Type of market order                        time_in_force = \"gfd\",  # Time period (gfd: good for day)                        trigger = \"immediate\",  # Trigger or delay order                        price = 8.96,           # The highest price you are willing to pay                        quantity = 1,           # Number of shares you want                        side = \"buy\")           # buy or sell  get_order_status_crypto(RH, order_id = x$id) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a current status of an option order on RobinHood — get_order_status_options","title":"Get a current status of an option order on RobinHood — get_order_status_options","text":"Returns list order information given buy/sell order url returned place_order_options().","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a current status of an option order on RobinHood — get_order_status_options","text":"","code":"get_order_status_options(RH, status_url)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a current status of an option order on RobinHood — get_order_status_options","text":"RH object class RobinHood status_url (string) url order returned place_order","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_order_status_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a current status of an option order on RobinHood — get_order_status_options","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  # Place an order, should generate an email confirmation x <- place_order_options(RH = RH,                        option_id = \"346e46af-380e-4052-a7c2-15748f0fc0ca\",                        direction = \"debit\",   # one of \"debit\" or \"credit\"                        side = \"buy\",          # one of \"buy\" or \"sell\"                        quantity = 1,          # number of contracts                        stop_price = .01,      # Time period (gfd: good for day)                        type = \"limit\",        # limit or market (only limit is currently supported)                        time_in_force = \"gtc\") # \"gfd\", \"gtc\", \"ioc\", \"opg\"  get_order_status_options(RH, x$status_url) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_portfolios.html","id":null,"dir":"Reference","previous_headings":"","what":"Get portfolio summaries related to your RobinHood Account — get_portfolios","title":"Get portfolio summaries related to your RobinHood Account — get_portfolios","text":"Returns dataframe portfolio summaries specific period time. Default current day.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_portfolios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get portfolio summaries related to your RobinHood Account — get_portfolios","text":"","code":"get_portfolios(RH, interval = NULL, span = NULL)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_portfolios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get portfolio summaries related to your RobinHood Account — get_portfolios","text":"RH object class RobinHood interval (string) Interval time aggregate (examples: hour, day, week, month) span (string) Period time interested (examples: day, week, month, year)","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_portfolios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get portfolio summaries related to your RobinHood Account — get_portfolios","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_portfolios(RH) get_portfolios(RH, interval = \"day\", span = \"3month\") }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the currently held positions for your RobinHood account — get_positions","title":"Get the currently held positions for your RobinHood account — get_positions","text":"Get currently held positions RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the currently held positions for your RobinHood account — get_positions","text":"","code":"get_positions(RH, limit_output = TRUE)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the currently held positions for your RobinHood account — get_positions","text":"RH object class RobinHood limit_output (logical) true, return simplified positions table, false returns position details","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the currently held positions for your RobinHood account — get_positions","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_positions(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the currently held crypto positions for your RobinHood account — get_positions_crypto","title":"Get the currently held crypto positions for your RobinHood account — get_positions_crypto","text":"Get currently held crypto positions RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the currently held crypto positions for your RobinHood account — get_positions_crypto","text":"","code":"get_positions_crypto(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the currently held crypto positions for your RobinHood account — get_positions_crypto","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions_crypto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the currently held crypto positions for your RobinHood account — get_positions_crypto","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_positions_crypto(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the currently held positions for your RobinHood account — get_positions_options","title":"Get the currently held positions for your RobinHood account — get_positions_options","text":"Get currently held positions RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the currently held positions for your RobinHood account — get_positions_options","text":"","code":"get_positions_options(RH, trim_pending = TRUE)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the currently held positions for your RobinHood account — get_positions_options","text":"RH object class RobinHood trim_pending (logical) FALSE, return pending intraday columns","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_positions_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the currently held positions for your RobinHood account — get_positions_options","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_positions_options(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_quote.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a quote from RobinHood — get_quote","title":"Get a quote from RobinHood — get_quote","text":"Get quote RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_quote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a quote from RobinHood — get_quote","text":"","code":"get_quote(RH, symbol, limit_output = TRUE)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_quote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a quote from RobinHood — get_quote","text":"RH object class RobinHood symbol (string) ticker symbols limit_output (logical) TRUE (default) return less quote detail","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_quote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a quote from RobinHood — get_quote","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_quote(RH, \"IR\") }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_quote_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a crypto currency quote from RobinHood — get_quote_crypto","title":"Get a crypto currency quote from RobinHood — get_quote_crypto","text":"Get crypto currency quote RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_quote_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a crypto currency quote from RobinHood — get_quote_crypto","text":"","code":"get_quote_crypto(RH, symbol)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_quote_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a crypto currency quote from RobinHood — get_quote_crypto","text":"RH object class RobinHood symbol (string) cryto currency symbol BTC, ETH, DOGE","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_quote_crypto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a crypto currency quote from RobinHood — get_quote_crypto","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_quote_crypto(RH, \"BTC\") }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_ratings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get analyst raings for a given equity symbol from RobinHood — get_ratings","title":"Get analyst raings for a given equity symbol from RobinHood — get_ratings","text":"Get analyst raings given equity symbol RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_ratings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get analyst raings for a given equity symbol from RobinHood — get_ratings","text":"","code":"get_ratings(RH, symbol)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_ratings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get analyst raings for a given equity symbol from RobinHood — get_ratings","text":"RH object class RobinHood symbol (string) Ticker symbol","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_ratings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get analyst raings for a given equity symbol from RobinHood — get_ratings","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_ratings(RH, symbol = \"CAT\") }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ticker symbols for popular tags on RobinHood — get_tag","title":"Get ticker symbols for popular tags on RobinHood — get_tag","text":"Geta data frame ticker symbols names linked trending tags RobinHood website.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ticker symbols for popular tags on RobinHood — get_tag","text":"","code":"get_tag(RH, tag)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ticker symbols for popular tags on RobinHood — get_tag","text":"RH object class RobinHood tag (string) hyphenated tag \"100--popular\"","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_tag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ticker symbols for popular tags on RobinHood — get_tag","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_tag(RH, \"100-most-popular\") }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_tickers.html","id":null,"dir":"Reference","previous_headings":"","what":"Download all financial instruments available on RobinHood — get_tickers","title":"Download all financial instruments available on RobinHood — get_tickers","text":"Get dataframe listed companies including ticker symbols tradeability indicators.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_tickers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download all financial instruments available on RobinHood — get_tickers","text":"","code":"get_tickers(RH, add_fundamentals = FALSE)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_tickers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download all financial instruments available on RobinHood — get_tickers","text":"RH object class RobinHood add_fundamentals (logical) TRUE return fundamental data (long run time)","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_tickers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download all financial instruments available on RobinHood — get_tickers","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_tickers(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get personal user data related to your RobinHood account — get_user","title":"Get personal user data related to your RobinHood account — get_user","text":"Get personal user data related RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get personal user data related to your RobinHood account — get_user","text":"","code":"get_user(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/get_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get personal user data related to your RobinHood account — get_user","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/get_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get personal user data related to your RobinHood account — get_user","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  get_user(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/logout.html","id":null,"dir":"Reference","previous_headings":"","what":"Logout of RobinHood — logout","title":"Logout of RobinHood — logout","text":"Send logout call RobinHood API service disable token.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/logout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logout of RobinHood — logout","text":"","code":"logout(RH)"},{"path":"https://jestonblu.github.io/RobinHood/reference/logout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logout of RobinHood — logout","text":"RH object class RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/logout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logout of RobinHood — logout","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  logout(RH) }"},{"path":"https://jestonblu.github.io/RobinHood/reference/mod_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a data frame to json minus the square brackets on the ends — mod_json","title":"Converts a data frame to json minus the square brackets on the ends — mod_json","text":"Converts data frame json minus square brackets ends","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/mod_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a data frame to json minus the square brackets on the ends — mod_json","text":"","code":"mod_json(x, type)"},{"path":"https://jestonblu.github.io/RobinHood/reference/mod_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a data frame to json minus the square brackets on the ends — mod_json","text":"x dataframe intended json conversoin type (string) one \"fromJSON\" \"toJSON\"","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/place_ach_transfer.html","id":null,"dir":"Reference","previous_headings":"","what":"Place an ACH transfer to and from your RobinHood account — place_ach_transfer","title":"Place an ACH transfer to and from your RobinHood account — place_ach_transfer","text":"Place ACH transfer RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/place_ach_transfer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place an ACH transfer to and from your RobinHood account — place_ach_transfer","text":"","code":"place_ach_transfer(RH, action, amount, transfer_url)"},{"path":"https://jestonblu.github.io/RobinHood/reference/place_ach_transfer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place an ACH transfer to and from your RobinHood account — place_ach_transfer","text":"RH object class RobinHood action (string) one \"deposit\", \"withdraw\" amount (numeric) amount dollars want deposit withdraw transfer_url (string) url linked account, output get_ach(RH, \"relationships\")","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Place a buy or sell order against your RobinHood account — place_order","title":"Place a buy or sell order against your RobinHood account — place_order","text":"Place buy sell order RobinHood account","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place a buy or sell order against your RobinHood account — place_order","text":"","code":"place_order(   RH,   symbol,   type,   time_in_force,   trigger,   price = NA,   stop_price = NA,   quantity,   side )"},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place a buy or sell order against your RobinHood account — place_order","text":"RH object class RobinHood symbol (string) Ticket symbol attempting buy sell type (string) \"market\" \"limit\" time_in_force (string) Good Day (\"gfd\"), Good Till Canceled (\"gtc\"), Immediate Cancel (\"ioc\"), Opening (\"opg\") trigger (string) \"immediate\" \"stop\" price (number) price willing sell buy (max 2 decimals) (Note: P * Q > 0.01) stop_price (number) trigger = stop, enter stop price, otherwise leave blank quantity (int) number shares wish transact (> 0) (Note: P * Q > 0.01) side (string) \"buy\" \"sell\"","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Place a buy or sell order against your RobinHood account — place_order","text":"","code":"if (FALSE) { # ***************** ATTENTION ***************** #   - Price cannot extend beyond 2 decimals #   - Price * Quantity > $0.01 #   - Stop triggers requires stop_price > 0 # ***************** ATTENTION *****************  # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  # Place an order, should generate an email confirmation place_order(RH = RH,             symbol = \"GE\",          # Ticker symbol you want to trade             type = \"market\",        # Type of market order (market, limit)             time_in_force = \"gfd\",  # Time period the order is good for (gfd: good for day)             trigger = \"immediate\",  # Trigger or delay order             price = 8.96,           # The highest price you are willing to pay             quantity = 1,           # Number of shares you want             side = \"buy\")           # buy or sell  # Stop loss example place_order(RH,             symbol=\"ABC\",             type = 'market',             trigger = 'stop',             stop_price = 100,             time_in_force = \"gtc\",  # Good till close             quantity = 10,             side = 'sell') }"},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order_crypto.html","id":null,"dir":"Reference","previous_headings":"","what":"Place a crypto currency buy or sell order against your RobinHood account — place_order_crypto","title":"Place a crypto currency buy or sell order against your RobinHood account — place_order_crypto","text":"**Note**: Price Quantity can extend beyone 2 decimals **Note**: Price * Quantity > $0.01","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order_crypto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place a crypto currency buy or sell order against your RobinHood account — place_order_crypto","text":"","code":"place_order_crypto(RH, symbol, type, time_in_force, price, quantity, side)"},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order_crypto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place a crypto currency buy or sell order against your RobinHood account — place_order_crypto","text":"RH object class RobinHood symbol (string) Ticket symbol attempting buy sell type (string) \"market\" \"limit\" time_in_force (string) Good Till Canceled (\"gtc\"), Immediate Cancel (\"ioc\"), Opening (\"opg\") price (number) price willing sell buy quantity (number) number shares wish transact side (string) \"buy\" \"sell\"","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order_crypto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Place a crypto currency buy or sell order against your RobinHood account — place_order_crypto","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  # Place an order, should generate an email confirmation x <- place_order_crypto(RH = RH,                        symbol = \"DOGE\",        # Ticker symbol                        type = \"market\",        # Type of market order (market, limit)                        time_in_force = \"gtc\",  # Time period (gfd: good for day)                        price = .003,           # The highest price you are willing to pay                        quantity = 500,         # Number of shares you want                        side = \"buy\")           # buy or sell }"},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Place a options buy or sell order against your RobinHood account — place_order_options","title":"Place a options buy or sell order against your RobinHood account — place_order_options","text":"Place order option contract. Currently limit orders supported must supply price","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place a options buy or sell order against your RobinHood account — place_order_options","text":"","code":"place_order_options(   RH,   option_id,   direction,   side,   quantity,   stop_price = NULL,   type = \"limit\",   time_in_force )"},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place a options buy or sell order against your RobinHood account — place_order_options","text":"RH object class RobinHood option_id (string) id returned get_contracts() direction (string) one \"debit\" \"credit\" side (string) one \"buy\" \"sell\" quantity (integer) number contracts buy stop_price (numeric) stop price limit order type (string) \"limit\" \"market\" (limit currently supported) time_in_force (string) Good Till Canceled (\"gtc\"), Immediate Cancel (\"ioc\"), Opening (\"opg\")","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/place_order_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Place a options buy or sell order against your RobinHood account — place_order_options","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  # Place an options order, should generate an email confirmation x <- place_order_options(RH = RH,                        option_id = \"346e46af-380e-4052-a7c2-15748f0fc0ca\",                        direction = \"debit\",   # one of \"debit\" or \"credit\"                        side = \"buy\",          # one of \"buy\" or \"sell\"                        quantity = 1,          # number of contracts                        stop_price = .01,      # Time period (gfd: good for day)                        type = \"limit\",        # limit or market (only limit is currently supported)                        time_in_force = \"gtc\") # \"gfd\", \"gtc\", \"ioc\", \"opg\" }"},{"path":"https://jestonblu.github.io/RobinHood/reference/watchlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage your RobinHood watchlist — watchlist","title":"Manage your RobinHood watchlist — watchlist","text":"Add delete instruments RobinHood watchlist.","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/watchlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage your RobinHood watchlist — watchlist","text":"","code":"watchlist(RH, action, watchlist = \"\", ticker = \"\")"},{"path":"https://jestonblu.github.io/RobinHood/reference/watchlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manage your RobinHood watchlist — watchlist","text":"RH object class RobinHood action (string) one : get, add, delete watchlist (string) name watchlist add, delete, get instruments, null return list watchlist ticker (string) list tickers add delete, null add delete watchlist","code":""},{"path":"https://jestonblu.github.io/RobinHood/reference/watchlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manage your RobinHood watchlist — watchlist","text":"","code":"if (FALSE) { # Login in to your RobinHood account RH <- RobinHood(\"username\", \"password\")  # Get a vector of your watchlist names watchlist(RH, action = \"get\")  # Get a vectors of symbols on your watchlist watchlist(RH, action = \"get\", watchlist = \"Default\")  # Add a symbol to your watchlist watchlist(RH, action = \"add\", watchlist = \"Default\", ticker = \"CAT\")  # Delete a symbol from your watchlist watchlist(RH, action = \"delete\", watchlist = \"Default\", ticker = \"CAT\") }"},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-8-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.8.0","text":"(GH-170): api_order updated api","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-7-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.7.1","text":"(GH-163): api_logout updated api reference @zhangrz2023","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-6-9","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.6.9","text":"added static field al_key api_login body request","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-6-8","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.6.8","text":"unsearchable tickers RH causing issue applied filter remove unsearchable symbols","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-6-7","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.6.7","text":"(GH-153): fixed broken link preventing placing orders working","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-6-6","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.6.6","text":"Redesigned RH object, added transparency API return Temporarily disabled non-MFA login method","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-165","dir":"Changelog","previous_headings":"","what":"RobinHood 1.6.5","title":"RobinHood 1.6.5","text":"CRAN release: 2022-04-22","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-6-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.6.5","text":"(GH-147): Added HTTPS validation check make cryptic errors less likely (@JanLauGe)","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-6-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.6.4","text":"(GH-99) RobinHood() issues tbl_vars (GH-146) RobinHood() issues tbl_vars (@JanLauGe)","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-6-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.6.3","text":"(GH-141) get_positions_options() Column state doesn’t exist #141 (@fouslim)","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-162","dir":"Changelog","previous_headings":"","what":"RobinHood 1.6.2","title":"RobinHood 1.6.2","text":"CRAN release: 2022-01-24","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-6-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.6.2","text":"(GH-139) get_positions_options(), get_contracts(): fixed api change (@fouslim, @SwingBotScripts)","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"new-features-1-6-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"RobinHood 1.6.1","text":"(GH-123) api_historicals_options(): (@jgQuantScripts) (GH-123) get_historicals_options(): (@jgQuantScripts)","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"clean-up-1-6-1","dir":"Changelog","previous_headings":"","what":"Clean up","title":"RobinHood 1.6.1","text":"(GH-122): place_order(): added default parameter value price = NA (@kmohammadi6) ## Documentation (GH-122): place_order(): added stop loss example (@kmohammadi6)","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-16","dir":"Changelog","previous_headings":"","what":"RobinHood 1.6","title":"RobinHood 1.6","text":"CRAN release: 2021-03-01","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"new-features-1-6","dir":"Changelog","previous_headings":"","what":"New Features","title":"RobinHood 1.6","text":"(GH-74) get_ratings(): returns analyst rating comments particular instrument (GH-117) get_positions_crypto(): added average_price field (GH-116) New function get_historicals_crypto() (@jgQuantScripts) ## Bug Fixes (GH-108) get_tickers(): longer fails call returns info given equity symbol (GH-110) get_positions_crypto(): longer fails position single crypto (GH-115) get_order_history_crypto(): longer limits last 75 records (GH-103) get_positions(): now returns message positions found (GH-111) api_marketdata(): fixed dataframe conversion error (@fouslim) (GH-113) watchlist(): fixed broken function due api change ## Clean (GH-101) place_order(): longer prevents trading fractional shares (GH-114) get_positions_crypto() swapped average_price mark_price, eliminating rounding errors get_order_history_crypto(): USD references stripped name symbol, look cleaner now Fixed various documentation typos","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"documentation-1-6","dir":"Changelog","previous_headings":"","what":"Documentation","title":"RobinHood 1.6","text":"Updated layout site Added network plots displaying functions linked within package","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-15","dir":"Changelog","previous_headings":"","what":"RobinHood 1.5","title":"RobinHood 1.5","text":"CRAN release: 2021-01-06","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"new-features-1-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"RobinHood 1.5","text":"MFA now enabled via RobinHood(username, password, mfa_code) function. Use authentication app input code. optional required enabled MFA RobinHood account.","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-14","dir":"Changelog","previous_headings":"","what":"RobinHood 1.4","title":"RobinHood 1.4","text":"CRAN release: 2020-05-23","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"new-features-1-4","dir":"Changelog","previous_headings":"","what":"New features","title":"RobinHood 1.4","text":"get_positions_options(): gets owned options contracts get_contracts(): get current open contracts place_order_options(): plan buy order contract get_order_status_options(): check status existing order cancel_order_options(): cancel existing order","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.4","text":"Fixed issue get fundamental returned entire vector symbols every row, now one symbol per row","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"clean-up-1-4","dir":"Changelog","previous_headings":"","what":"Clean up","title":"RobinHood 1.4","text":"api_positions() now returns positions still ","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"clean-up-1-3-1","dir":"Changelog","previous_headings":"","what":"Clean up","title":"RobinHood 1.3.1","text":"(GH-86) get_market_hours(), get_historicals() default returned times UTC. default format changed local users timezone. timezone column now also reflects timezone actual time, time zone exchange comes RobinHood.","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"new-features-1-3","dir":"Changelog","previous_headings":"","what":"New Features","title":"RobinHood 1.3","text":"(GH-50) Added get_ach(), place_ach_transfer(), cancel_ach_transfer() allows transfers linked bank accounts RobinHood","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"clean-up-1-3","dir":"Changelog","previous_headings":"","what":"Clean up","title":"RobinHood 1.3","text":"(GH-85) Made cancel_url, status_url consistent across equity, crypto, ach orders (crypto status requires ID instead staus_url left alone) Cleaned old comments Fixed bad example code references Fixed date format warning get_quote()","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-2-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.2.5","text":"Fixed API change broke get_positions() Fixed API change broke get_order_history_crypto()","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-124","dir":"Changelog","previous_headings":"","what":"RobinHood 1.2.4","title":"RobinHood 1.2.4","text":"CRAN release: 2020-03-25","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-2-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"RobinHood 1.2.4","text":"fixed quantity check place_order_crypto() allows fractional share purchases","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"clean-up-1-2-4","dir":"Changelog","previous_headings":"","what":"Clean up","title":"RobinHood 1.2.4","text":"added page_size = 1000 default parameter get_order_history()","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-123","dir":"Changelog","previous_headings":"","what":"RobinHood 1.2.3","title":"RobinHood 1.2.3","text":"get_tickers(): fixed issue get_tickers(RH, fundamentals = TRUE) return error tickers fundamental data empty","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-121","dir":"Changelog","previous_headings":"","what":"RobinHood 1.2.1","title":"RobinHood 1.2.1","text":"CRAN release: 2019-10-06","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RobinHood 1.2.1","text":"place_orders_crypto(): fixed typo api url preventing working place_orders(): fixed issue limit orders work without stop_price cancel_order_crypto(): fixed typo preventing working get_tickers(): fixed typo preventing function working logout(): fixed broken api","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-12","dir":"Changelog","previous_headings":"","what":"RobinHood 1.2","title":"RobinHood 1.2","text":"CRAN release: 2019-09-30","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"new-features-1-2","dir":"Changelog","previous_headings":"","what":"New Features","title":"RobinHood 1.2","text":"get_order_history_crypto() place_order_crypto() cancel_order_crypto() cancel_order_crypto() get_quote_crypto()","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"clean-up-1-2","dir":"Changelog","previous_headings":"","what":"Clean up","title":"RobinHood 1.2","text":"Fixed typo place_order() Changed curl httr backend API calls Fixed bad date format api_accounts Improved comments code","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-107","dir":"Changelog","previous_headings":"","what":"RobinHood 1.0.7","title":"RobinHood 1.0.7","text":"CRAN release: 2019-05-24","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-0-7","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RobinHood 1.0.7","text":"fixed change upstream login api","code":""},{"path":[]},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"new-features-1-0-6","dir":"Changelog","previous_headings":"","what":"New Features","title":"RobinHood 1.0.6","text":"added optional output get_fundamentals() output get_tickers()","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"clean-up-1-0-6","dir":"Changelog","previous_headings":"","what":"Clean up","title":"RobinHood 1.0.6","text":"get_historicals() now returns prices formatted numeric get_fundamentals() now returns data frame instead list","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"robinhood-105","dir":"Changelog","previous_headings":"","what":"RobinHood 1.0.5","title":"RobinHood 1.0.5","text":"CRAN release: 2019-04-06","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"bug-fixes-1-0-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"RobinHood 1.0.5","text":"fixed issue throws error shares fixed issue throws error one investments “Simple Name” value api","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"new-features-1-0-5","dir":"Changelog","previous_headings":"","what":"New Features","title":"RobinHood 1.0.5","text":"get_historicals(): added new function pulling historical prices get_portfolios(): added new function pulling current historical portfolio values get_order_history(): added additional field created_at","code":""},{"path":"https://jestonblu.github.io/RobinHood/news/index.html","id":"clean-up-1-0-5","dir":"Changelog","previous_headings":"","what":"Clean up","title":"RobinHood 1.0.5","text":"Reorganized api_functions make calls go api_instruments() pulling instrument meta data","code":""}]
